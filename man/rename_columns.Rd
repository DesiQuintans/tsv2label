% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/aaa_rename_with_dictionary.R
\name{rename_columns}
\alias{rename_columns}
\alias{rename_with_dictionary}
\alias{revert_colnames}
\title{Rename columns using a data dictionary}
\usage{
rename_with_dictionary(df, path)

revert_colnames(df, path)
}
\arguments{
\item{df}{(Dataframe) A dataframe whose columns you want to rename.}

\item{path}{(Character) Path to the dataset's dictionary files, which is
either a folder or a .zip file. See \link{expected_files} for more info.}
}
\value{
Mutates \code{df} in-place in the global environment.
}
\description{
Datasets from foreign analysis packages sometimes impose character length
limits on their variables, which leads to variable names that can be obtuse.
This function lets you rename columns (and undo that renaming) using a data
dictionary.
}
\details{
Only columns that are an exact match will be renamed, all others will be left
alone; this means that you can 'pre-name' a column that doesn't exist in your
dataframe yet, create that column, and then name it from the dictionary
afterwards.
}
\section{Functions}{
\itemize{
\item \code{rename_with_dictionary()}: Replace original column names with new ones.

\item \code{revert_colnames()}: Revert column names to original names.

}}
\examples{
\dontrun{
# An unlabelled dataset that is built-into this package.
my_poker <- poker

# system.file() gives the path to a dictionary for this dataset, which is
# also built-into this package.
rename_with_dictionary(my_poker, system.file("extdata/poker", package = "tsv2label"))

##  head(colnames(my_poker)):
##  random_int c1_suit c1_rank c2_suit c2_rank c3_suit

revert_colnames(my_poker, system.file("extdata/poker", package = "tsv2label"))

##  head(colnames(my_poker)):
##  ID S1 C1 S2 C2 S3
}
}
